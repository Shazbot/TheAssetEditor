<UserControl x:Class="KitbasherEditor.Views.EditorViews.Rmv2.MaterialGeneralView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:s="http://schemas.singulink.com/xaml"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <System:Double x:Key="labelWidth">120</System:Double>
    </UserControl.Resources>

    <GroupBox DockPanel.Dock="Top" Margin="0,5,0,0">
        <GroupBox.Header>
            <TextBlock Text="Material - Common" FontWeight="Bold" />
        </GroupBox.Header>
        
        <DockPanel LastChildFill="False">
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                <Label Width ="{StaticResource labelWidth}" DockPanel.Dock="Left" Content="Vertex Type"/>
                <Label>:</Label>
                <ComboBox ItemsSource="{Binding MaterialGeneral.PossibleVertexTypes}" SelectedItem="{Binding MaterialGeneral.VertexType}" VerticalAlignment="Center"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                <Label Width ="{StaticResource labelWidth}" DockPanel.Dock="Left" Content="Use Alpha"/>
                <Label>:</Label>
                <CheckBox IsChecked="{Binding MaterialGeneral.UseAlpha, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" VerticalContentAlignment="Center"/>
            </StackPanel>


            <DockPanel DockPanel.Dock="Top">
                <Label Width ="{StaticResource labelWidth}" DockPanel.Dock="Left" Content="Texture Directory"/>
                <Label>:</Label>
                <TextBox Text="{Binding MaterialGeneral.TextureDirectory, UpdateSourceTrigger=PropertyChanged,  Mode=TwoWay}" VerticalContentAlignment="Center"/>
            </DockPanel>

            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                <Label Width ="{StaticResource labelWidth}" DockPanel.Dock="Left" Content="Only used Textures"/>
                <Label>:</Label>
                <CheckBox  HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding MaterialGeneral.OnlyShowUsedTextures, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
            </StackPanel>

            <ItemsControl ItemsSource="{Binding MaterialGeneral.TextureList, UpdateSourceTrigger=PropertyChanged}" DockPanel.Dock="Top">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="0,10,0,0" Visibility="{Binding IsVisible.Value, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToHiddenConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="120"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>  
                                <RowDefinition Height="auto"/>  
                                <RowDefinition Height="auto"/>  
                            </Grid.RowDefinitions> 

                            <Border BorderThickness="0 0.5 0 0" BorderBrush="Gray" Grid.ColumnSpan="8" Grid.RowSpan="2" Margin="-4"></Border>
                            <Label Grid.Column="0" Grid.Row="0" FontWeight="Bold" Content="{Binding TextureTypeStr, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label Grid.Column="1" Grid.Row="0" Content=":"/>
                            <CheckBox Grid.Column="2" Grid.Row="0" IsChecked="{Binding UseTexture, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ToolTip="Preview texture in render window" VerticalContentAlignment="Center"/>
                            
                            <Border Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="10" BorderBrush="Blue">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}" >
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsWatched}" Value="True">
                                                <Setter Property="BorderThickness" Value="1"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsWatched}" Value="False">
                                                <Setter Property="BorderThickness" Value="0"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <TextBox TextWrapping="Wrap" Text="{Binding Path, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"  VerticalContentAlignment="Center">
                                    <Validation.ErrorTemplate>
                                        <ControlTemplate>
                                            <StackPanel>
                                                <Border BorderBrush="Red" BorderThickness="1" ToolTip="{Binding ErrorContent}">
                                                    <AdornedElementPlaceholder x:Name="textBox"/>
                                                </Border>
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Validation.ErrorTemplate>
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}" >
                                            <Style.Triggers>
                                                <Trigger Property="Validation.HasError" Value="true">
                                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding IsWatched}" Value="True">
                                                    <Setter Property="ToolTip" Value="This texture is located on the disk and is being watched for edits.&#x0a;Use the &quot;Save watched texture into pack&quot; button above to save it into the pack."/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </Border>
                            <Button Grid.Column="4" Grid.Row="0" Click="{s:MethodBinding Browse}" ToolTip="Browse from packs" Margin="1">
                                <iconPacks:PackIconMaterial Kind="FileFindOutline" />
                            </Button>
                            <Button Grid.Column="5" Grid.Row="0" Command="{Binding ExportAndWatchCommand}" IsEnabled="{Binding CanExportAndWatchCommand}" ToolTipService.ShowOnDisabled="True" ToolTip="Export and watch texture&#x0a;This will save the texture to the disk, as well as create a png version&#10;of the texture in the same location that will be watched for edits." Margin="1">
                                <iconPacks:PackIconMaterial Kind="ContentSaveEdit" />
                            </Button>

                            <Button Grid.Column="6" Grid.Row="0" Click="{s:MethodBinding Import}" ToolTip="Browse from disk&#x0a;The texture on the disk will also be watched for edits and auto-reloaded." Margin="5,1,1,1">
                                <iconPacks:PackIconMaterial Kind="FileImportOutline" />
                            </Button>
                            <Button Grid.Column="7" Grid.Row="0" Command="{Binding SaveWatchedCommand}" IsEnabled="{Binding CanSaveWatchedCommand}" ToolTipService.ShowOnDisabled="True" ToolTip="Save watched texture into pack&#10;Remember to save the model file as well!" Margin="1">
                                <iconPacks:PackIconMaterial Kind="ContentSave" />
                            </Button>

                            <Button Grid.Column="8" Grid.Row="0" Click="{s:MethodBinding Preview}" ToolTip="Preview texture" Margin="5,1,1,1">
                                <iconPacks:PackIconMaterial Kind="Eye"/>
                            </Button>
                            <Button Grid.Column="9" Grid.Row="0" Click="{s:MethodBinding Remove}" ToolTip="Removes the texture from the model" Margin="1">
                                <iconPacks:PackIconMaterial Kind="Close" Height="12" Width="12"/>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            
        </DockPanel>
    </GroupBox>


</UserControl>
